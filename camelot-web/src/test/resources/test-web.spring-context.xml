<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:amq="http://activemq.apache.org/schema/core" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/util
            http://www.springframework.org/schema/util/spring-util-3.1.xsd
            http://activemq.apache.org/schema/core
            http://activemq.apache.org/schema/core/activemq-core.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


    <import resource="classpath:test-camelot-core-context.xml"/>
    <bean id="camelot-config" class="ru.yandex.qatools.camelot.spring.ListablePropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:camelot-default.properties</value>
                <value>classpath:test-config.properties</value>
                <value>classpath:test-web-config.properties</value>
            </list>
        </property>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="properties">
            <util:properties>
                <prop key="activemq.embedded.bind">localhost:#{T(ru.yandex.qatools.camelot.util.SocketUtil).findFreePort()}</prop>
                <prop key="hazelcast.port">#{new String(T(ru.yandex.qatools.camelot.util.SocketUtil).findFreePort())}</prop>
                <prop key="hazelcast.port.auto.increment">false</prop>
            </util:properties>
        </property>
    </bean>
    <bean id="mockedAtmosphere" class="ru.yandex.qatools.camelot.common.MockedBroadcastService"/>
</beans>
