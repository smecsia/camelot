<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://camel.apache.org/schema/spring
            http://camel.apache.org/schema/spring/camel-spring.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!-- ThreadPool profiles -->
    <bean id="camelotDefaultProfile" class="org.apache.camel.spi.ThreadPoolProfile">
        <property name="id" value="camelotDefaultProfile"/>
        <property name="defaultProfile" value="true"/>
        <property name="timeUnit" value="MILLISECONDS"/>
        <property name="keepAliveTime" value="${camelot.threadpool.default.keepAliveMillis}"/>
        <property name="poolSize" value="${camelot.threadpool.default.size}"/>
        <property name="maxPoolSize" value="${camelot.threadpool.default.maxSize}"/>
    </bean>

    <bean id="camelotMulticastProfile" class="org.apache.camel.spi.ThreadPoolProfile">
        <property name="id" value="camelotMulticastProfile"/>
        <property name="defaultProfile" value="false"/>
        <property name="timeUnit" value="MILLISECONDS"/>
        <property name="keepAliveTime" value="${camelot.threadpool.multicast.keepAliveMillis}"/>
        <property name="poolSize" value="${camelot.threadpool.multicast.size}"/>
        <property name="maxPoolSize" value="${camelot.threadpool.multicast.maxSize}"/>
    </bean>

    <!-- Routes -->
    <camelContext id="camelot-camel-context" xmlns="http://camel.apache.org/schema/spring">
        <jmxAgent id="agent" disabled="true"/>

        <endpoint id="events.input" uri="${camelot.input.uri}"/>
        <endpoint id="events.output" uri="${camelot.output.uri}"/>

        <route id="stopped">
            <from ref="events.output"/>
            <stop/>
        </route>
    </camelContext>

</beans>